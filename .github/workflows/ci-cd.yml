name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [agenda-service, auth-service, user-service, api-gateway]

    env:
      REGISTRY: docker.io/matheusMBarros
      NODE_VERSION: 18

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies & Test (${{ matrix.service }})
        working-directory: ${{ matrix.service }}
        run: |
          npm install
          npm run lint || true
          npm run test -- --coverage
          npx nyc check-coverage --lines 80

      - name: Build Docker image (${{ matrix.service }})
        run: |
          docker build -t $REGISTRY/${{ matrix.service }}:${{ github.sha }} ${{ matrix.service }}

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image (${{ matrix.service }})
        run: |
          docker push $REGISTRY/${{ matrix.service }}:${{ github.sha }}
          docker tag $REGISTRY/${{ matrix.service }}:${{ github.sha }} $REGISTRY/${{ matrix.service }}:latest
          docker push $REGISTRY/${{ matrix.service }}:latest

      - name: Deploy to Development
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Deploy script para ambiente de desenvolvimento"
          bash ./deploy-dev.sh ${{ matrix.service }}

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Deploy script para produção"
          bash ./deploy-prod.sh ${{ matrix.service }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ matrix.service }}
