name: CI/CD Pipeline

on:
  push:
    branches: [main, develop] # Aciona o workflow em pushes para main e develop
  pull_request:               # Aciona em pull requests
  workflow_dispatch:          # Permite acionamento manual

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [agenda-service, auth-service, user-service, api-gateway]

    env:
      REGISTRY: docker.io/mbarros01
      NODE_VERSION: 18

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies (${{ matrix.service }})
        working-directory: ${{ matrix.service }}
        run: npm install

      - name: Build Docker image (${{ matrix.service }})
        run: |
          docker build -t $REGISTRY/${{ matrix.service }}:${{ github.sha }} ${{ matrix.service }}

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image (${{ matrix.service }})
        run: |
          docker push $REGISTRY/${{ matrix.service }}:${{ github.sha }}
          docker tag $REGISTRY/${{ matrix.service }}:${{ github.sha }} $REGISTRY/${{ matrix.service }}:latest
          docker push $REGISTRY/${{ matrix.service }}:latest

      - name: Upload Swagger YAML (${{ matrix.service }})
        uses: actions/upload-artifact@v3
        with:
          name: swagger-${{ matrix.service }}
          path: ${{ matrix.service }}/swagger.yaml
        continue-on-error: true

      - name: Deploy to Development
        if: github.ref == 'refs/heads/develop'
        run: echo ">>> Simulando deploy para ambiente de desenvolvimento: ${{ matrix.service }}"

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: echo ">>> Simulando deploy para ambiente de produção: ${{ matrix.service }}"

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ matrix.service }}
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_ORGANIZATION }}_${{ matrix.service }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.qualitygate.wait=true
