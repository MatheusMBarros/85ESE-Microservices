version: '3.8'

services:
  # API Gateway Service
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api_gateway_service
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - AGENDA_SERVICE_URL=http://agenda-service:3003
    volumes:
      - ./api-gateway:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - auth-service
      - user-service
      - agenda-service
    networks:
      - minha_rede_app

  # Authentication Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - JWT_SECRET=SEU_SUPER_SEGREDO_JWT_AQUI_MUDE_ISSO
    volumes:
      - ./auth-service:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - minha_rede_app

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user_service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DB_NAME=users_db
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_HOST=postgres_user_service
    volumes:
      - ./user-service:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - postgres_user_service
    networks:
      - minha_rede_app

  # PostgreSQL para User Service
  postgres_user_service:
    image: postgres:14
    container_name: postgres_user_service
    restart: always
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Evita conflito com PostgreSQL local
    volumes:
      - pgdata_user:/var/lib/postgresql/data
    networks:
      - minha_rede_app

  # Agenda Service
  agenda-service:
    build:
      context: ./agenda-service
      dockerfile: Dockerfile
    container_name: agenda_service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGO_URI=mongodb://mongo_db:27017/agenda_db
    volumes:
      - ./agenda-service:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo_db
    networks:
      - minha_rede_app

  # MongoDB para Agenda Service
  mongo_db:
    image: mongo:latest
    container_name: mongo_database
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=agenda_db
    networks:
      - minha_rede_app

volumes:
  mongo_data:
  pgdata_user:

networks:
  minha_rede_app:
    driver: bridge
